Welcome:
  Read the syllabus to get started: /syllabus

Complexity:
    Introduction: /complexity
    "Part 1: Learn about computational complexity":
        Efficiency: /python/en/efficiency
        Notebook questions (assignment): /complexity/notebook
    "Part 2: Data structures and their efficiency":
        Dictionaries: /python/en/dictionaries
        Tuples: /python/en/tuples
        Sets: /python/en/sets
        List slicing and indexing: /python/en/slicing
    "Part 3: How to write efficient code":
        Applying big O in your code: /python/en/big-o
        Improving count_occurrence: /python/en/big-o-example
    "Part 4: Write your own efficient code":
        Indexing words (assignment): /complexity/word-index
        Indexing pairs (assignment): /complexity/pair-index
    Submit your solutions: /submit/complexity

News:
    Introduction: /news/
    "Part 1: Functional Programming":
        Functional programming (reading): /python/en/functional-programming
        Functional programming (assignment): /news/functional
    "Part 2: Create a new Python package":
        Packages (reading): /python/en/packages
        Packages (assignment): /news/package
    "Part 3: File I/O":
        File I/O (reading): /python/en/file-io
        The OS library (reading): /python/en/os
    "Part 4: Natural language processing":
        Tokenize (assignment): /news/tokenize
        Unigrams (assignment): /news/unigrams
        Bigrams (assignment): /news/bigrams
    Submit your solutions: /submit/news

Survival:
    # ".":
    #   - survival
    Submit your solutions: /submit/survival
